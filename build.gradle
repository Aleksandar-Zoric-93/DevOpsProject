// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'java'



buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.3'
        classpath 'com.vanniktech:gradle-android-junit-jacoco-plugin:0.5.0'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}


apply plugin: 'com.vanniktech.android.junit.jacoco'

allprojects {
    repositories {
        jcenter()
    }
}

task stage(dependsOn: ['clean', 'installApp'])



//task clean(type: Delete) {
   // delete rootProject.buildDir
//}

tasks.withType(JavaCompile) {
    //enable compilation in a separate daemon process
    options.fork = true

    //enable incremental compilation
    options.incremental = true
}


task jacocoTestReport(type: JacocoReport, dependsOn: "testDebug") {
    group = "Reporting"

    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(
            dir: '../app/build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )


    executionData = files('../app/build/jacoco/testDebug.exec')
    if (project.hasProperty("teamcity")) {
        println '##teamcity[jacocoReport dataPath=\'app/build/jacoco/testDebug.exec\' includes=\'ie.itt.devops.aleksandar.devopsproject.*\' excludes=\'**/R.class **/R$*.class **/*$ViewInjector*.* **/BuildConfig.* **/Manifest*.*\']'
    }

    reports {
        xml.enabled = true
        html.enabled = true
    }

}


